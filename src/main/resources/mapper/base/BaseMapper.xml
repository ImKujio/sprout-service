<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="me.kujio.sprout.base.mapper.BaseMapper">

    <sql id="select">
        select *
        from ${table}
    </sql>

    <sql id="where">
        <if test="wheres != null and wheres.size() > 0">
            <where>
                <foreach collection="wheres" item="where" separator="AND">
                    <choose>
                        <when test="where.type == 'IN'">
                            ${where.column} IN
                            <foreach collection="where.values" item="value" open="(" close=")" separator=",">#{value}</foreach>
                        </when>
                        <when test="where.type == 'BETWEEN'">
                            ${where.column} BETWEEN
                            <foreach collection="where.values" item="value" separator="AND">#{value}</foreach>
                        </when>
                        <when test="where.type == 'LIKE'">
                            ${where.column} LIKE CONCAT('%',#{where.value},'%')
                        </when>
                        <otherwise>
                            ${where.column} ${where.type} #{where.value}
                        </otherwise>
                    </choose>
                </foreach>
            </where>
        </if>
    </sql>

    <select id="list" parameterType="map" resultType="map">
        <include refid="select"/>
        <include refid="where"/>
        <if test="orders != null and orders.size() > 0">
            ORDER BY
            <foreach collection="orders" item="order" separator=",">
                ${order.column} ${order.type}
            </foreach>
        </if>
        <if test="page != null">
            LIMIT #{page.page}, #{page.size}
        </if>
    </select>

    <select id="get" parameterType="map" resultType="map">
        <include refid="select"/>
        where id = #{id}
    </select>

    <select id="all" parameterType="map" resultType="map">
        <trim prefix="SELECT" suffixOverrides=",">
            id AS id,
            <foreach item="field" collection="fields" separator=",">
                ${field.column} AS ${field.name}
            </foreach>
        </trim>
        FROM ${table}
    </select>

    <select id="exist" parameterType="map" resultType="int">
        SELECT COUNT(id)
        FROM ${table}
        WHERE id = #{id}
    </select>

    <select id="count" parameterType="map" resultType="int">
        SELECT COUNT(*) FROM ${table}
        <include refid="where"/>
    </select>

    <insert id="add" parameterType="map" useGeneratedKeys="true" keyProperty="addRst.id">
        insert into ${table}
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <foreach collection="fields" item="field" separator=",">
                <if test="field.column != 'id' and (field.value != null || field.nullable == true)">${field.column}</if>
            </foreach>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <foreach collection="fields" item="field" separator=",">
                <if test="field.column != 'id' and (field.value != null || field.nullable == true)">
                    <choose>
                        <when test="field.nullable == true">NULL</when>
                        <otherwise>#{field.value}</otherwise>
                    </choose>
                </if>
            </foreach>
        </trim>
    </insert>

    <update id="set" parameterType="map">
        update ${table}
        <trim prefix="SET" suffixOverrides=",">
            <foreach collection="fields" item="field" separator=",">
                <if test="field.column != 'id' and (field.value != null || field.nullable == true)">
                    <choose>
                        <when test="field.nullable == true">${field.column} = NULL</when>
                        <otherwise>${field.column} = #{field.value}</otherwise>
                    </choose>
                </if>
            </foreach>
        </trim>
        where id = #{id}
    </update>

    <delete id="del" parameterType="map">
        delete from ${table}
        <include refid="where"/>
    </delete>

</mapper>